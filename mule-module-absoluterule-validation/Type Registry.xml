<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<nrlJavaTypeRegistry xmlns="urn:modeltwozero.com:NRL:javaTypeRegistry">
    <autoConfigEnabled>true</autoConfigEnabled>
    <packageMap>
        <modelPackage>transactions</modelPackage>
        <javaPackage>com.democompany.models.transactions</javaPackage>
    </packageMap>
    <packageMap>
        <modelPackage>xsd</modelPackage>
        <javaPackage>com.democompany.models.transactions</javaPackage>
    </packageMap>
    <packageMap>
        <modelPackage>transactions::transactions</modelPackage>
        <javaPackage>com.democompany.models.transactions</javaPackage>
    </packageMap>
    <map>
        <qualifiedModelName>Integer</qualifiedModelName>
        <javaType>
            <qualifiedName>int</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>Int</qualifiedModelName>
        <javaType>
            <qualifiedName>int</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>String</qualifiedModelName>
        <javaType>
            <qualifiedName>java.lang.String</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>Void</qualifiedModelName>
        <javaType>
            <qualifiedName>void</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>Boolean</qualifiedModelName>
        <javaType>
            <qualifiedName>boolean</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>Double</qualifiedModelName>
        <javaType>
            <qualifiedName>double</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>Long</qualifiedModelName>
        <javaType>
            <qualifiedName>long</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>Date</qualifiedModelName>
        <javaType>
            <qualifiedName>java.util.Date</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>Float</qualifiedModelName>
        <javaType>
            <qualifiedName>float</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>Decimal</qualifiedModelName>
        <javaType>
            <qualifiedName>java.math.BigDecimal</qualifiedName>
            <factoryMethod>valueOf</factoryMethod>
            <wrappedValue>
                <qualifiedName>double</qualifiedName>
                <getAccessor>doubleValue</getAccessor>
            </wrappedValue>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::string</qualifiedModelName>
        <javaType>
            <qualifiedName>java.lang.String</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::normalizedString</qualifiedModelName>
        <javaType>
            <qualifiedName>java.lang.String</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::token</qualifiedModelName>
        <javaType>
            <qualifiedName>java.lang.String</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::base64Binary</qualifiedModelName>
        <javaType>
            <qualifiedName>byte[]</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::hexBinary</qualifiedModelName>
        <javaType>
            <qualifiedName>byte[]</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::integer</qualifiedModelName>
        <javaType>
            <qualifiedName>java.math.BigInteger</qualifiedName>
            <factoryMethod>valueOf</factoryMethod>
            <wrappedValue>
                <qualifiedName>int</qualifiedName>
                <getAccessor>intValue</getAccessor>
            </wrappedValue>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::positiveInteger</qualifiedModelName>
        <javaType>
            <qualifiedName>java.math.BigInteger</qualifiedName>
            <factoryMethod>valueOf</factoryMethod>
            <wrappedValue>
                <qualifiedName>int</qualifiedName>
                <getAccessor>intValue</getAccessor>
            </wrappedValue>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::negativeInteger</qualifiedModelName>
        <javaType>
            <qualifiedName>java.math.BigInteger</qualifiedName>
            <factoryMethod>valueOf</factoryMethod>
            <wrappedValue>
                <qualifiedName>int</qualifiedName>
                <getAccessor>intValue</getAccessor>
            </wrappedValue>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::nonNegativeInteger</qualifiedModelName>
        <javaType>
            <qualifiedName>java.math.BigInteger</qualifiedName>
            <factoryMethod>valueOf</factoryMethod>
            <wrappedValue>
                <qualifiedName>int</qualifiedName>
                <getAccessor>intValue</getAccessor>
            </wrappedValue>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::nonPositiveInteger</qualifiedModelName>
        <javaType>
            <qualifiedName>java.math.BigInteger</qualifiedName>
            <factoryMethod>valueOf</factoryMethod>
            <wrappedValue>
                <qualifiedName>int</qualifiedName>
                <getAccessor>intValue</getAccessor>
            </wrappedValue>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::long</qualifiedModelName>
        <javaType>
            <qualifiedName>long</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::unsignedLong</qualifiedModelName>
        <javaType>
            <qualifiedName>java.math.BigInteger</qualifiedName>
            <factoryMethod>valueOf</factoryMethod>
            <wrappedValue>
                <qualifiedName>int</qualifiedName>
                <getAccessor>intValue</getAccessor>
            </wrappedValue>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::int</qualifiedModelName>
        <javaType>
            <qualifiedName>int</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::unsignedInt</qualifiedModelName>
        <javaType>
            <qualifiedName>long</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::short</qualifiedModelName>
        <javaType>
            <qualifiedName>int</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::unsignedShort</qualifiedModelName>
        <javaType>
            <qualifiedName>int</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::byte</qualifiedModelName>
        <javaType>
            <qualifiedName>byte</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::unsignedByte</qualifiedModelName>
        <javaType>
            <qualifiedName>int</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::decimal</qualifiedModelName>
        <javaType>
            <qualifiedName>java.math.BigDecimal</qualifiedName>
            <factoryMethod>valueOf</factoryMethod>
            <wrappedValue>
                <qualifiedName>double</qualifiedName>
                <getAccessor>doubleValue</getAccessor>
            </wrappedValue>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::float</qualifiedModelName>
        <javaType>
            <qualifiedName>float</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::double</qualifiedModelName>
        <javaType>
            <qualifiedName>double</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::boolean</qualifiedModelName>
        <javaType>
            <qualifiedName>boolean</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::duration</qualifiedModelName>
        <javaType>
            <qualifiedName>javax.xml.datatype.Duration</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::dateTime</qualifiedModelName>
        <javaType>
            <qualifiedName>javax.xml.datatype.XMLGregorianCalendar</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::date</qualifiedModelName>
        <javaType>
            <qualifiedName>javax.xml.datatype.XMLGregorianCalendar</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::time</qualifiedModelName>
        <javaType>
            <qualifiedName>javax.xml.datatype.XMLGregorianCalendar</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::gYear</qualifiedModelName>
        <javaType>
            <qualifiedName>javax.xml.datatype.XMLGregorianCalendar</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::gYearMonth</qualifiedModelName>
        <javaType>
            <qualifiedName>javax.xml.datatype.XMLGregorianCalendar</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::gMonth</qualifiedModelName>
        <javaType>
            <qualifiedName>javax.xml.datatype.XMLGregorianCalendar</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::gMonthDay</qualifiedModelName>
        <javaType>
            <qualifiedName>javax.xml.datatype.XMLGregorianCalendar</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::gDay</qualifiedModelName>
        <javaType>
            <qualifiedName>javax.xml.datatype.XMLGregorianCalendar</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::Name</qualifiedModelName>
        <javaType>
            <qualifiedName>java.lang.String</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::QName</qualifiedModelName>
        <javaType>
            <qualifiedName>javax.xml.namespace.QName</qualifiedName>
            <wrappedValue>
                <qualifiedName>java.lang.String</qualifiedName>
                <getAccessor>toString()</getAccessor>
            </wrappedValue>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::NCName</qualifiedModelName>
        <javaType>
            <qualifiedName>java.lang.String</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::anyURI</qualifiedModelName>
        <javaType>
            <qualifiedName>java.lang.String</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::language</qualifiedModelName>
        <javaType>
            <qualifiedName>java.lang.String</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::ID</qualifiedModelName>
        <javaType>
            <qualifiedName>java.lang.String</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::IDREF</qualifiedModelName>
        <javaType>
            <qualifiedName>java.lang.Object</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::ENTITY</qualifiedModelName>
        <javaType>
            <qualifiedName>java.lang.String</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::NMTOKEN</qualifiedModelName>
        <javaType>
            <qualifiedName>java.lang.String</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>xsd::Object</qualifiedModelName>
        <javaType>
            <qualifiedName>java.lang.Object</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>transactions::transactions::Transaction</qualifiedModelName>
        <javaType>
            <qualifiedName>com.democompany.models.transactions.Transaction</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
    <map>
        <qualifiedModelName>transactions::transactions::Transactions</qualifiedModelName>
        <javaType>
            <qualifiedName>com.democompany.models.transactions.Transactions</qualifiedName>
            <isEnum>false</isEnum>
        </javaType>
    </map>
</nrlJavaTypeRegistry>
